version: '3'

services:
  db:
    image: mysql:8.0.26
    #hostname: postgres
    container_name: videoconference-docker-db
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_PASSWORD=Ket0328560055
      - MYSQL_USER=vanket1512001
      - MYSQL_DATABASE=videoconference
      - MYSQL_TCP_PORT=3306
    volumes:
      - ./database:/var/lib/mysql # mount data from container out local whenever restart application
    ports:
       - "3306:3306"
      #- target: 3306 # port container
      #  published: 3306 # port local
      #  protocol: tcp
      #  mode: host
    networks:
      - backend
  api:                                  # Back end springboot container
    container_name: videoconference-api # Container name is 'videoconference API'
    restart: always                     # Restart policy: always restart the container when it exits
    build:
      context: ./                       # Specify the context root directory, and then specify the Dockerfile based on the directory
      dockerfile: ./docker/api/Dockerfile
#    working_dir: /app                   # Set working directory as app folder in container
#    volumes:                            # Mount file
#      - ./backend:/app                  # Map the host's backend folder (java code) to the app folder in the container
#      - ./logs/:/app/log                # Map the logs generated by the container to the logs folder of the host
    environment:
      - DATABASE_USERNAME=vanket1512001
      - DATABASE_PASSWORD=Ket0328560055
      - DATABASE_HOST=db
      - DATABASE_NAME=videoconference
      - DATABASE_PORT=3306
    ports:                              # Mapping port
      - "3000:3000"
    depends_on:
      - db
    networks:
      - backend
    links:
      - db
#    # Execute the command to run the springboot project after the container is created
#    command: mvn clean spring-boot:run '-Dmaven.test.skip=true'

  web:                                  # Front end node container (running Vue projects in nginx)
    container_name: videoconference-web # Container name is 'videoconference web'
    restart: always                     # Restart policy: always restart the container when it exits
    build:
      context: ./                       # Specify the context root directory, and then specify the Dockerfile based on the directory
      dockerfile: ./docker/web/Dockerfile
    environment:
      - VUE_APP_SERVICE_ENDPOINT=http://tankhanh.tk:3000
    ports:
      - "8080:8080"                      # Mapping port
    depends_on:                          # Depends on the api container. This web container can only be started after being started by the dependent container
      - api
    networks:
      - frontend
networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge

volumes:
  database:

#      - ./migration:/docker-entrypoint-initdb.d